image: golang:latest  

stages:
  - test
  - build
before_script:
  - cd src/prototype
  - go get github.com/go-telegram-bot-api/telegram-bot-api
  - go get github.com/Syfaro/telegram-bot-api
  - go get github.com/lib/pq

format:
  stage: test
  tags:
    - linux
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)


compile:
  stage: build
  tags:
    - linux

  script:
    - go build -o tg_bot .
  artifacts:
    paths:
      - src/prototype/tg_bot
    expire_in: 1 day
    
deploy_stage:
  image: kroniak/ssh-client
  stage: deploy
  environment:
    name: stage
    url: http://stage.s21tgbot.ru
  when: manual
  script:
    — mkdir -p ~/.ssh
    — echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    — chmod -R 700 ~/.ssh
    — echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    — chmod 644 ~/.ssh/known_hosts
    — echo "$CONFIG" > ./config.json
    — scp -P$SSH_PORT -r ./config.json $SSH_USER@$SSH_HOST:/var/www/project/config/
    — scp -P$SSH_PORT -r ./binary $SSH_USER@$SSH_HOST:~/binary_tmp
    — ssh -p$SSH_PORT $SSH_USER@$SSH_HOST 'sudo service project stop && cp ~/binary_tmp /var/www/project/binary && sudo service project restart'